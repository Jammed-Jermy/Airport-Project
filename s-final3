#ProjectKrishnaHAHAHA
import mysql.connector as ms
import pandas as pd
import random 
import sys
import time
import math
import ctypes
import webbrowser
try:
    con = ms.connect(host="localhost", user="root", password="hello123", database="airport")
except ms.Error as err:
    print("An error occurred while connecting to the MySQL server:", err)
cursor=con.cursor()
masterpass=6969
 
 
 
 
def menu ():
    print( "\n\n\n\n","*"*60,"Welcome to Flight Booking System", "*"*196)
    time.sleep(2)
    print("\t\t---------------------------------")
    print("\t\t| 1. Book Flight                |")
    print("\t\t| 2. Check Existing Tickets     |")
    print("\t\t| 3. Make changes in details    |")
    print("\t\t| 4. Continue Payment?          |")
    print("\t\t| 5. Exit                       |")
    print("\t\t---------------------------------")
def table():
    cursor.execute("CREATE DATABASE IF NOT EXISTS airport;")
    cursor.execute("CREATE TABLE IF NOT EXISTS airlines (Pid INT NOT NULL PRIMARY KEY,Airlines VARCHAR(30) NOT NULL,Arrival VARCHAR(20) NOT NULL,Departure VARCHAR(20) NOT NULL,TOD VARCHAR(10) NOT NULL, Date VARCHAR(15),Ticket INT NOT NULL,RT VARCHAR(3) NOT NUL);")
    cursor.execute('''INSERT INTO airlines (pid, Airlines, Arrival, Departure, TOD, Date, Ticket, RT)
    VALUES
    (68, 'Vistara', 'Goa', 'Delhi', '5:30', '2023-05-01', 6000, 'no'),
    (69, 'Flydubai', 'Delhi', 'Mumbai', '12:00', '2023-05-31', 8000, 'yes'),
    (70, 'Vistara', 'Mumbai', 'Goa', '18:00', '2023-05-31', 5000, 'no'),
    (71, 'IndiGo', 'Delhi', 'Goa', '21:45', '2023-05-31', 7000, 'yes'),
    (72, 'Flydubai', 'Mumbai', 'Delhi', '5:30', '2023-05-31', 6000, 'yes'),
    (73, 'Vistara', 'Goa', 'Mumbai', '12:00', '2023-06-01', 9000, 'no'),
    (74, 'IndiGo', 'Delhi', 'Goa', '18:00', '2023-06-01', 4000, 'yes'),
    (75, 'Flydubai', 'Mumbai', 'Goa', '21:45', '2023-06-01', 11000, 'no'),
    (76, 'Vistara', 'Delhi', 'Goa', '5:30', '2023-06-01', 7500, 'yes'),
    (77, 'IndiGo', 'Mumbai', 'Goa', '12:00', '2023-06-01', 8500, 'yes'),
    (78, 'Flydubai', 'Pune', 'Mumbai', '18:00', '2023-06-02', 7000, 'no'),
    (79, 'Vistara', 'Pune', 'Delhi', '21:45', '2023-06-02', 9000, 'yes'),
    (80, 'IndiGo', 'Mumbai', 'Pune', '5:30', '2023-06-02', 6000, 'no'),
    (81, 'Flydubai', 'Pune', 'Mumbai', '12:00', '2023-06-02', 6500, 'yes'),
    (82, 'Vistara', 'Delhi', 'Goa', '18:00', '2023-06-02', 7500, 'yes'),
    (83, 'IndiGo', 'Goa', 'Delhi', '21:45', '2023-06-02', 7000, 'no'),
    (84, 'Flydubai', 'Pune', 'Delhi', '5:30', '2023-06-03', 8000, 'no'),
    (85, 'Vistara', 'Mumbai', 'Goa', '12:00', '2023-06-03', 6000, 'yes'),
    (86, 'IndiGo', 'Delhi', 'Mumbai', '18:00', '2023-06-03', 7500, 'yes'),
    (87, 'Flydubai', 'Goa', 'Mumbai', '21:45', '2023-06-03', 9000, 'no'),
    (88, 'Vistara', 'Delhi', 'Goa', '5:30', '2023-06-03', 7000, 'yes'),
    (89, 'IndiGo', 'Mumbai', 'Goa', '12:00', '2023-06-03', 5500, 'no'),
    (90, 'Flydubai', 'Pune', 'Mumbai', '18:00', '2023-06-04', 6500, 'yes'),
    (91, 'Vistara', 'Pune', 'Delhi', '21:45', '2023-06-04', 7500, 'yes'),
    (92, 'IndiGo', 'Mumbai', 'Pune', '5:30', '2023-06-04', 7000, 'no'),
    (93, 'Flydubai', 'Pune', 'Mumbai', '12:00', '2023-06-04', 8000, 'no'),
    (94, 'Vistara', 'Delhi', 'Goa', '18:00', '2023-06-04', 6000, 'yes'),
    (95, 'IndiGo', 'Goa', 'Delhi', '21:45', '2023-06-04', 7000, 'yes'),
    (96, 'Flydubai', 'Pune', 'Delhi', '5:30', '2023-06-05', 5500, 'no'),
    (97, 'Vistara', 'Mumbai', 'Goa', '12:00', '2023-06-05', 8500, 'yes'),
    (98, 'IndiGo', 'Delhi', 'Mumbai', '18:00', '2023-06-05', 7500, 'no'),
    (99, 'Flydubai', 'Goa', 'Mumbai', '21:45', '2023-06-05', 9000, 'yes'),
    (100, 'Vistara', 'Delhi', 'Goa', '5:30', '2023-06-05', 7000, 'yes'),
    (101, 'IndiGo', 'Mumbai', 'Goa', '12:00', '2023-06-05', 5500, 'no'),
    (102, 'Flydubai', 'Pune', 'Mumbai', '18:00', '2023-06-06', 6500, 'no'),
    (103, 'Vistara', 'Pune', 'Delhi', '21:45', '2023-06-06', 7500, 'yes'),
    (104, 'IndiGo', 'Mumbai', 'Pune', '5:30', '2023-06-06', 7000, 'yes'),
    (105, 'Flydubai', 'Pune', 'Mumbai', '12:00', '2023-06-06', 8000, 'no'),
    (105, 'Vistara', 'Delhi', 'Goa', '18:00', '2023-06-06', 6000, 'yes'),
    (106, 'IndiGo', 'Goa', 'Delhi', '21:45', '2023-06-06', 7000, 'yes'),
    (107, 'Flydubai', 'Pune', 'Delhi', '5:30', '2023-06-07', 5500, 'no'),
    (108, 'Vistara', 'Mumbai', 'Goa', '12:00', '2023-06-07', 8500, 'yes'),
    (109, 'IndiGo', 'Delhi', 'Mumbai', '18:00', '2023-06-07', 7500, 'no'),
    (110, 'Flydubai', 'Goa', 'Mumbai', '21:45', '2023-06-07', 9000, 'yes'),
    (111, 'Vistara', 'Mumbai', 'Delhi', '5:30', '2023-05-03', 8000, 'no'),
    (112, 'IndiGo', 'Delhi', 'Mumbai', '12:00', '2023-05-03', 7500, 'yes'),
    (113, 'Flydubai', 'Goa', 'Delhi', '18:00', '2023-05-03', 6000, 'yes'),
    (114, 'Vistara', 'Delhi', 'Goa', '21:45', '2023-05-03', 7000, 'no'),
    (115, 'IndiGo', 'Pune', 'Mumbai', '5:30', '2023-05-04', 6500, 'no'),
    (116, 'Flydubai', 'Mumbai', 'Pune', '12:00', '2023-05-04', 7000, 'yes'),
    (117, 'Vistara', 'Goa', 'Mumbai', '18:00', '2023-05-04', 5500, 'yes'),
    (118, 'IndiGo', 'Mumbai', 'Goa', '21:45', '2023-05-04', 7500, 'no'),
    (119, 'Flydubai', 'Delhi', 'Goa', '5:30', '2023-05-05', 8000, 'no'),
    (120, 'Vistara', 'Goa', 'Delhi', '12:00', '2023-05-05', 6000, 'yes'),
    (121, 'IndiGo', 'Pune', 'Mumbai', '18:00', '2023-05-05', 7000, 'no'),
    (122, 'Flydubai', 'Mumbai', 'Pune', '21:45', '2023-05-05', 5500, 'no'),
    (123, 'IndiGo', 'Delhi', 'Goa', '5:30', '2023-05-06', 7000, 'yes'),
    (124, 'Flydubai', 'Goa', 'Delhi', '12:00', '2023-05-06', 8000, 'yes'),
    (125, 'Vistara', 'Mumbai', 'Goa', '18:00', '2023-05-06', 5500, 'no'),
    (126, 'IndiGo', 'Goa', 'Mumbai', '21:45', '2023-05-06', 7500, 'no'),
    (127, 'Flydubai', 'Delhi', 'Mumbai', '5:30', '2023-05-07', 6500, 'no'),
    (128, 'Vistara', 'Mumbai', 'Goa', '12:00', '2023-05-07', 6000, 'yes'),
    (129, 'IndiGo', 'Pune', 'Goa', '18:00', '2023-05-07', 7000, 'yes'),
    (130, 'IndiGo', 'Goa', 'Delhi', '12:00', '2023-05-07', 6000, 'yes'),
    (131, 'Flydubai', 'Delhi', 'Goa', '18:00', '2023-05-07', 7000, 'yes'),
    (132, 'Vistara', 'Mumbai', 'Goa', '21:45', '2023-05-07', 5500, 'no'),
    (133, 'IndiGo', 'Goa', 'Mumbai', '5:30', '2023-05-08', 7500, 'no'),
    (134, 'Flydubai', 'Delhi', 'Mumbai', '12:00', '2023-05-08', 6500, 'no'),
    (135, 'Vistara', 'Mumbai', 'Delhi', '18:00', '2023-05-08', 8000, 'no'),
    (136, 'IndiGo', 'Pune', 'Mumbai', '21:45', '2023-05-08', 7000, 'yes'),
    (137, 'Flydubai', 'Mumbai', 'Pune', '5:30', '2023-05-09', 5500, 'yes'),
    (138, 'Vistara', 'Goa', 'Mumbai', '12:00', '2023-05-09', 7500, 'no'),
    (139, 'IndiGo', 'Mumbai', 'Goa', '18:00', '2023-05-09', 6000, 'no'),
    (140, 'Flydubai', 'Delhi', 'Goa', '21:45', '2023-05-09', 7000, 'yes'),
    (141, 'Vistara', 'Goa', 'Delhi', '5:30', '2023-05-10', 8000, 'yes'),
    (142, 'IndiGo', 'Delhi', 'Goa', '12:00', '2023-05-10', 5500, 'no');
    ''')
 
def ran_price():
    cursor.execute("SELECT Ticket FROM airlines WHERE pid = {}".format(plane_ids))
    row = cursor.fetchone()
    price=row[0]
    price=int(price)
    x=random.uniform(-0.1, 0.2)
    new_price= price + price * x
    new_price=math.ceil(new_price)
    return int(new_price)
 
 
 
 
 
 
 
def save_payment_details():               #checked
    try:
        x=0
        passenger__id = int(input("Enter passenger ID: "))
        print("Checking.")
        time.sleep(1)
        print("Checking..")
        time.sleep(1)
        print("Checking...")
        time.sleep(1)
        if passenger__id==passenger_id:
            cursor.execute("Select pid from customer where Passenger={}".format(passenger__id))
            pid=cursor.fetchall()
            pid=str(pid[0][0])
            cursor.execute("SELECT Ticket FROM airlines WHERE pid = {}".format(pid))
            row = cursor.fetchone()
            price=row[0]
            price=int(price)
            x=random.uniform(-0.1, 0.2)
            new_price= price + price * x
            new_price=math.ceil(new_price)
            print("Success!")
            credit_card_number = input("Enter credit card number: ")
            price=new_price
            print("Your final Price is: ", price)
            user_ver = input("Do you want to continue? (Y/N): ")
            try:
                if user_ver.upper() == "Y" or user_ver.upper() == "YES":
                    name=input("Enter your Full Name on Card")
                    expiry=input("Enter your Expiry Date on Card")
                    Cvv=input("Enter your CVV")
                    name=name
                    expiry=expiry
                    insert_query = "INSERT INTO payment_info values('{}','{}','{}','{}')".format(credit_card_number,new_price, passenger__id, Cvv)
                    cursor.execute(insert_query)
                    con.commit()
                    print("Saving.")
                    time.sleep(1)
                    print("Saving..")
                    time.sleep(1)
                    print("Saving...")
                    time.sleep(1)
                    print("Payment successfully!")
                    x=1
                else:
                    print("Payment cancelled.")
            except ValueError:
                print("Invalid input. Please enter 'Y' or 'N'.")
        else:
            print("Your passenger ID is INVALID")
    except Exception as e:
        print("Error occurred while saving payment details:", e)
    return x
 
def login():
    print("Please Enter the flight id (Pid) you want to book","\n")
    try:
        pid = int(input("Response: "))
        time.sleep(1)
        print("Checking for flight availibility.")
        time.sleep(1)
        print("Checking for flight availibility..")
        time.sleep(1)
        print("Checking for flight availibility...")
        if pid in plane_ids:
            time.sleep(1)
            print("Available!")
            fname = input("Enter your First Name: ")
            lname = input("Enter your Last Name: ")
            test_digit="1234567890"
            while True:
                phone=input("Enter your phone number: ")
                if len(phone)==len(test_digit):
                    break
                else:
                    print("Please make sure the number is valid")
                    continue
            meal = input("Are you vegetarian (y/n): ")
 
            if meal.lower() == "y" or meal.lower() == "yes":
                meal = "Veg"
            elif meal.lower() == "n" or meal.lower() == "no":
                meal = "Non Veg"
            else:
                print("Option, INCORRECT, auto meal = VEG")
                meal="Veg"
            final = [pid, fname, lname, phone, meal]
            finalDf = pd.DataFrame(final)
            finalDf = finalDf.rename(index={0: 'Pid'})
            finalDf = finalDf.rename(index={1: 'Fname'})
            finalDf = finalDf.rename(index={2: 'Lname'})
            finalDf = finalDf.rename(index={3: 'Phone'})
            finalDf = finalDf.rename(index={4: 'Meal'})
 
            print("\n", finalDf, "\n", "This is Your Login information. Do you want To change anything? (Y/N)")
            response = input("RESPONSE: ")
 
            while True:
                if response.upper() == "Y" or response.upper() == "YES" :
                    print("\n", "Please tell us what you want to change", finalDf)
                    changes = input("Enter Row name: ")
 
                    if changes == "Pid":
                        pid = int(input("Enter new Pid: "))
                        break
                    elif changes == "Fname":
                        fname = input("Enter new Fname: ")
                        break
                    elif changes == "Lname":
                        lname = input("Enter new Lname: ")
                        break
                    elif changes == "Phone":
                        phone = int(input("Enter new Phone: "))
                        break
                    elif changes == "Meal":
                        meal = input("Enter meal Vee or Non-Veg: ")
                        break
                    else:
                        print("error sherror aagya ji ye toh")
                        pass
                    print("Making the changes.")
                    time.sleep(1)
                    print("Making the changes..")
                    time.sleep(1)
                    print("Making the changes...")
                    time.sleep(1)
                    print("Changes have been made.")
                else:
                    break
            password = password_gen()
            password = str(password)
            fname=fname.lower().title()
            lname=lname.lower().title()
            phone = str(phone)
            fname = "'" + fname + "'"
            lname = "'" + lname + "'"
            phone = "'" + phone + "'"
            meal = "'" + meal + "'"
            password = "'" + password + "'"
 
            passenger_id = get_next_passenger_id()
            loginquery = "INSERT INTO customer VALUES ({}, {}, {}, {}, {}, {}, {})".format(
                passenger_id, fname, lname, phone, meal, pid, password)
            try:
                cursor.execute(loginquery)
                con.commit()
                time.sleep(2)
                print("\n\nYour Data is Saved")
                time.sleep(1)
                print("\nYour passenger id is:",passenger_id,)
                time.sleep(1)
                print("Your password is", password)
                time.sleep(1)
                print("Please Remember These, These will help you retrive info late\n")
                time.sleep(1)
            except Exception as e:
                print("Your data was not saved, an error occured",e)
                sys.exit()
        else:
            time.sleep(1)
            print("The plane ID is not available, Exiting")
            sys.exit()
 
    except ValueError:
        print("Invalid input. Please enter a valid integer for Pid or Phone Number.")
 
def password_gen():
    out1=random.randrange(1000,8831)
    out2=random.randrange(100,999)
    out3=random.randrange(0,100)
    out4=68
    masterpass=out1+out2+out3+out4
    return masterpass
 
 
 
 
 
def seat():      #working properly (test 4 conductedd)
    a=random.randrange(0,36)
    a=str(a)
    l=['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
    b=random.randint(1,24)
    bethak=str(a+l[b])
    return bethak
 
def get_next_passenger_id():           #working properly (test 4 conductedd)
    query = "SELECT MAX(Passenger) FROM customer;"
    cursor.execute(query)
    result = cursor.fetchone()
    max_passenger_id = result[0]
    exception_grp=None
    if type(max_passenger_id)==type(exception_grp):
        next_passenger_id=1
    else:
        next_passenger_id = max_passenger_id + 1
    return next_passenger_id
 
def modify():
    print("Note-We can only update personal information, Not the Flight Information")
    time.sleep(1)
    pw=input("Please enter your 4 digit password")
    pass_id=int(input("Please enter your Passenger ID: "))
    checkquery=("select * from customer where Pw={} and Passenger={} ").format(pw,pass_id)
    cursor.execute(checkquery)
    checkquery_r = cursor.fetchone()
    try:
        print("This is your information\n",checkquery_r,"\nWhat do you want to change?")
        print("Enter what do you want to change","\n1.First name","\n2.Last name","\n3.Phone","\n4.Password","\n5.Exit: ")
        modific=int(input("RESPONSE: "))
        if modific==1:
            while True:
                Fname=input("Enter your First name")
                Fname2=input("Confirm your First Name")
                if Fname==Fname2:
                    name_query=("update customer set Fname='{}' where Passenger={};").format(Fname,pass_id)
                    cursor.execute(name_query)
                    con.commit()
                    if cursor.rowcount>0:
                        print("Changed Sucessfully")
                        sys.exit()
                    else:
                        print("Error occured, please try again")
                else:
                    print("Make sure both names are same")
                    break
        elif modific==2:
            while True:
                Lname=input("Enter your Last name")
                Lname2=input("Confirm your Last Name")
                if Lname==Lname2:
                    Lname_query=("update customer set Lname='{}' where Passenger={};").format(Lname,pass_id)
                    cursor.execute(Lname_query)
                    con.commit()
                    if cursor.rowcount>0:
                        print("Changed Sucessfully")
                        sys.exit()
                    else:
                        print("Error occured, please try again")
                else:
                    print("Make sure both names are same")
                    break
        elif modific==3:
            while True:
                Phone=input("Enter your Phone number")
                Phone2=input("Confirm your Phone number")
                if Phone==Phone2:
                    Phone_query=("update customer set Phone='{}' where Passenger={};").format(Phone,pass_id)
                    cursor.execute(Phone_query)
                    con.commit()
                    if cursor.rowcount>0:
                        print("Changed Sucessfully")
                        sys.exit()
                    else:
                        print("Error occured, please try again")
                else:
                    print("Make sure both Phone numbers are same")
                    break
        elif modific==4:
            while True:
                Password=input("Enter your Password")
                Password2=input("Confirm your Password")
                if Password==Password2:
                    pw_query=("update customer set Pw='{}' where Passenger={};").format(Password,pass_id)
                    cursor.execute(pw_query)
                    con.commit()
                    if cursor.rowcount>0:
                        print("Changed Sucessfully")
                        sys.exit()
                    else:
                        print("Error occured, please try again")
                else:
                    print("Make sure both Phone numbers are same")
                    break
        elif modific==5:
            print("Program Exited")
        else:
            print("Invalid Option, Program Exited")
    except AttributeError:
        print("Error accessing database.")
 
 
 
 
 
 
def checkings():
    pass_id=int(input("Enter your passenger Id: "))
    fullname=input("Enter your full name: ")
    pw = input("Enter your password: ")
    try:
        print("Validating Info.")
        time.sleep(1)
        print("Validating Info..")
        time.sleep(1)
        print("Validating Info...")
        time.sleep(1)
        checker="Select * from customer where Passenger={};".format(pass_id)
        cursor.execute(checker)
        doubler2=cursor.fetchone()
        doubler=doubler2[6]
        while True:
            if doubler==pw:
                print("\t\t---------------------------------")
                print("\t\t| 1. Extract Flight Details     |")
                print("\t\t| 2. Extract Personal Details   |")
                print("\t\t| 3. Extract Credit Details     |")
                print("\t\t| 4. Exit                       |")
                print("\t\t---------------------------------")
                pid=int(doubler2[5])
                f=(doubler2[1])
                l=(doubler2[2])
                P=(doubler2[3])
                m=(doubler2[4])
                confirm=int(input("Response: "))
                if confirm==2:
                            print("------------------------------------------------------------------------------------------------------------")
                            print("|      First Name      |      Last Name      |      Phone      |      Meal      |            PID           |")
                            print("------------------------------------------------------------------------------------------------------------")
                            print(f"|         {f}         |        {l}          |      {P}        |       {m}       |           {pid}         |")
                            print("------------------------------------------------------------------------------------------------------------")
                elif confirm==1:
                    lastquery="Select * from airlines where PID={};".format(pid)
                    cursor.execute(lastquery)
                    resultant=cursor.fetchone()
                    print("Your flight details are",resultant)
                elif confirm==3:
                    lastquery3="Select * from payment_info where Passenger={} ".format(pass_id)
                    cursor.execute(lastquery3)
                    resultant3=cursor.fetchone()
                    print("Your credit details are",resultant3)
                else:
                    print("Reverting back, choice failed")
                    print("Exiting")
                    exit()
            else:
                print("Please enter info correctly")
                break
 
    except ValueError:
     print("Invalid password.")
 
def get_current_passenger_id():
    query = "SELECT MAX(Passenger) FROM customer;"
    cursor.execute(query)
    result = cursor.fetchone()
    max_passenger_id = result[0]
    exception_grp=None
    if type(max_passenger_id)==type(exception_grp):
        current_passenger_id=1
    else:
        current_passenger_id = max_passenger_id
    return current_passenger_id
 
def continue_payment ():
    query="select * from payment_info"
    cursor.execute(query)
    Data=cursor.fetchall()
    Data2=pd.DataFrame(Data)
    Data2.columns=["1","2","3","4"]
    paid=Data2['3'].tolist()
    query2="select Passenger from customer"
    cursor.execute(query2)
    notpaid=cursor.fetchall()
    notpaid=pd.DataFrame(notpaid)
    notpaid.columns=['1']
    notpaid=notpaid['1'].tolist()
    x=[]
    for i in notpaid:
        if i not in paid:
            x.append(i)
    notpaid=x
    pasenger=int(input("Enter your passenger id: "))
    if pasenger in paid:
        print("Already paid")
        sys.exit()
    elif pasenger in notpaid:
        cursor.execute("Select pid from customer where Passenger={}".format(pasenger))
        pid=cursor.fetchall()
        pid=str(pid[0][0])
        cursor.execute("SELECT Ticket FROM airlines WHERE pid = {}".format(pid))
        row = cursor.fetchone()
        price=row[0]
        price=int(price)
        x=random.uniform(-0.1, 0.2)
        new_price= price + price * x
        new_price=math.ceil(new_price)
        credit_card_number = input("Enter credit card number: ")
        print("Your final Price is: ", new_price)
        user_ver = input("Do you want to continue? (Y/N)")
        try:
            if user_ver.lower() == "y" or user_ver.upper() == "yes":
                name=input("Enter your Full Name on Card")
                expiry=input("Enter your Expiry Date on Card")
                Cvv=input("Enter your CVV")
                name=name
                expiry=expiry
                insert_query = "INSERT INTO payment_info values('{}','{}','{}','{}')".format(credit_card_number,new_price, pasenger, Cvv)
                cursor.execute(insert_query)
                con.commit()
                print("Saving.")
                time.sleep(1)
                print("Saving..")
                time.sleep(1)
                print("Saving...")
                time.sleep(1)
                print("Payment successfully!")
                x=1
            elif user_ver.lower()=="n" or user_ver.lower()=="no":
                print("Payment cancelled.")
        except Exception as e:
            print("Error occurred while saving payment details:", e)
        return x
    elif pasenger not in paid and pasenger not in notpaid:
        print("First book a flight,dumb")
    else:
        print("ERror")
 
def tickets():
    time.sleep(2)
    webbrowser.open("https://www.youtube.com/watch?v=dQw4w9WgXcQ") 
    time.sleep(15)
 
    ctypes.windll.user32.keybd_event(0x12, 0, 0, 0) 
    ctypes.windll.user32.keybd_event(0x73, 0, 0, 0) 
    ctypes.windll.user32.keybd_event(0x73, 0, 0x0002, 0) 
    ctypes.windll.user32.keybd_event(0x12, 0, 0x0002, 0)
 
 
 
 
 
 
def admin_control():
    print("\t\t---------------------------------")
    print("\t\t| 1. Add a flight               |")
    print("\t\t| 2. Update an existing flight  |")
    print("\t\t| 3. Delete a flight            |")
    print("\t\t| 4. Free-Based System          |")
    print("\t\t| 5. Exit                       |")
    print("\t\t---------------------------------") 
 
def update():
    print("")
    cursor.execute("Select * from airlines")
    result2=cursor.fetchall()
    df_result3=pd.DataFrame(result2)
    print(df_result3)
    ifpid=input("Enter the flight pid you want to update")
    cursor.execute("Select pid from airlines")
    pid=cursor.fetchall()
    Pid=[]
    for i in pid:
        if i not in Pid:
            Pid.append(i)
        else:
            break
    if ifpid in Pid:
        print("Sucess")
        airlines=input("Enter New airline name: ")
        arrival=input("Enter New Arrival location: ")
        departure=input("Enter New Departure location: ")
        tod=input("Enter New Time of Departure: ")
        date=input("Enter New airline Date (yy-mm-dd): ")
        rt=input("Will flight convey a round trip?: ")
        price=input("Enter the base price (note the price will be affected on different days for user): ")
        update=("update airliens value({},{},{},{}".format(airlines,arrival,departure,tod,date,rt,price,update))
        cursor.execute(update)
        con.commit()
        if cursor.rowcount>1:
            print("Updated succesfully")
        else:
            print("Erorr updating the values")
    elif ifpid not in Pid:
        print("The pid you have entered does not exist please provide a valid pid, or add a new flight")
        exit()
    else:
        print("Values Erorr occured")
 
def delete():
    pass
 
def add():
    pass
 
 
 
 
while True:
    menu()
    try:
        user=int(input("Your Response:"))
        print( "\n\n\n\n","*"*61,"*"*196)
        if user==1:
            l1=["Goa","Mumbai","Delhi","Pune"]
            while True:
                print("\t\t--------------------------")
                print("\t\t|         CITY TABLE     |")
                print("\t\t--------------------------")
                print("\t\t|   Goa     |   Mumbai   |")
                print("\t\t|-----------|------------|")
                print("\t\t|   Pune    |   Delhi    |")
                print("\t\t--------------------------")
                time.sleep(1)
                Arrival=input("Please choose a Arrival City from Above: ")
                Departure=input("Please choose a Departure City from Above: ")
                Arrival=Arrival.lower().title()
                Departure=Departure.lower().title()
                if Arrival==Departure or Arrival and Departure not in l1:
                    print("\n","\n","\n","Please enter the info Correctly","\n")
                    termination=int(input("PRESS 1 to EXIT or 0 to CONTINUE: "))
                    if termination==1:
                        print("Exiting")
                        break
                    else:
                        continue
                else:
                    Arrival="'"+Arrival+"'"
                    Departure="'"+Departure+"'"
                    query="Select * from airlines where Arrival={} and Departure={}".format(Arrival,Departure)
                    cursor.execute(query)
                    data=cursor.fetchall()
                    df=pd.DataFrame(data)
                    df.columns = ['Plane Id', 'Airline', 'Arrival City','Departure City', 'Time', 'DoD', 'Ticket Price','Round Trip']
                    print("\n","\n","\n","\n","THESE ARE THE AVAILBLE FLIGHTS","\n",df)
                    plane_ids = df['Plane Id'].tolist()
                    time.sleep(2)
                    print("\n","What would you like to do now?","\n", "1.Choose a flight", "\n","2.Exit","\n")
                    try:
                        user2 = int(input("RESPONSE: "))
                        try:
                            if user2==2:
                                sys.exit()
                            elif user==1:
                                login()
                                passenger_id=get_current_passenger_id()
                                output=input("Do you want to proceed with the payment?(yes/no): ")
                                output=output.upper()
                                if output=="YES" or output=="Y":
                                    if save_payment_details()==1:
                                        time.sleep(1)
                                        print("Flight booked Succesfully")
                                        print("Please remember your Seat number it will help you retrive information about the flight in the future")
                                        time.sleep(1)
                                        print("Your seat number: ", seat())
                                        print("Thankyou for choosing us")
                                        time.sleep(5)
                                        print("Exiting.")
                                        time.sleep(1)
                                        print("Exiting..")
                                        time.sleep(1)
                                        print("Exiting...")
                                        time.sleep(1)
                                        print("HAHA GET PRANKED")
                                        print("Shorry madam bye bye")
                                        tickets()
                                        sys.exit()
                                    else:
                                        print("Remember your login info is saved, You can check back at us")
                                        break
                                elif output=="NO":
                                    print("Thank You, Your information has been saved for future uses")
                                    sys.exit()
                                else:
                                    print("Invalid Option")
                        except ValueError:
                            print("Invalid input. Please enter a valid response.")
                    except Exception as e:
                        print("An error occured,",e)
        elif user==2:
                checkings()
        elif user==3:
            modify()
        elif user==4:
            print("This is continuation of payment")
            time.sleep(1)
            print("Please make sure your details were saved previously")
            time.sleep(1)
            a=continue_payment()
            if a==1:
                print("Flight booked Succesfully")
                print("Please remember your Seat number it will help you retrive information about the flight in the future")
                time.sleep(1)
                print("Your seat number: ", seat())
                print("Thankyou for choosing us")
                time.sleep(5)
                print("Exiting.")
                time.sleep(1)
                print("Exiting..")
                time.sleep(1)
                print("Exiting...")
                sys.exit()
            else:
                print("Sample space add text here")
        elif user==5:
            print("EXITED")
            exit()
        elif user==69:
            masterpass_check=int(input("Enter Master Password: "))
            try:
                if masterpass_check==masterpass:
                    print("Password correct!")
                    time.sleep(1)
                    print("Welcome Krishna")
                    time.sleep(1)
                    print("You have reache Admin Console")
                    time.sleep(1)
                    print("You can control the Backend of MYSQL from here")
                    time.sleep(1)
                    while True:
                        try:
                            admin_control()
                            admin_output=int(input("Enter Response:"))
                            if admin_output==4:
                                print("The existing data is:")
                                print("\t\t--------------------------")
                                print("\t\t| Databases |   Tables   |")
                                print("\t\t--------------------------")
                                print("\t\t|  airport  |  customer  |")
                                print("\t\t|-----------|------------|")
                                print("\t\t|   None    |   airlines |")
                                print("\t\t|-----------|------------|")
                                print("\t\t|   None    |payment_info|")
                                print("\t\t--------------------------")
                                while True:
                                    querry=input("Enter any querry in mysql command form:")
                                    try:
                                        cursor.execute(querry)
                                        result=cursor.fetchall()
                                        df_result=pd.DataFrame(result)
                                        print(df_result)
                                    except Exception as e:
                                        print("An Error occured",str(e) )
                                    inp=input("Want to continue?(y/n): ")
                                    if inp=="y" or inp=="Y":
                                        print("Continuing")
                                    else:
                                        print("Exiting Admin Console")
                                        break
                            elif admin_output==1:
                                add()
                            elif admin_output==2:
                                update()
                            elif admin_output==3:
                                delete()
                            elif admin_output==5:
                                exit()
                        except Exception as f:
                            print("Eror",f)
                else:
                    print("Invalid Masterpassword. ABORTING")
                    sys.exit()
            except ValueError:
                print("an Value Erorr Occured")
                sys.exit()
        else:
            print("DAM what u Enterin?")
    except Exception as e:
        print(e)
        continue
